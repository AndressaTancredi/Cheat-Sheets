# Configurar nome/e-mail
git config --global user.name "Seu Nome"
git config --global user.email "Seu E-mail"

# Clone
git clone url.git

# Inicializar Repo
git init

# Verificar Status do reposiótio
git status

# Adicionar/Rastrear arquivos (Track files)
git add arquivo
git add arquivo1.ps1 arquivo2.sh
git add . (Adiciona diretório inteiro)

# Realizar commit
git commit -m "Comentário/Descrição"

# Verificar commits
git log

# Verificar mudanças
git whatchanged
git whatchanged -p (Mostra alterações realizadas dentro dos arquivos)

# Mostra repositórios remotos configurados
git remote
git remote add origin url (Origin pode ser substituído por qualquer outro nome para o repositório)
git remote -v (Lista remotes configurados para o repositório)
git remote rename origin novo_nome (Renomeia remote configurado)

#Remove 
submodulo (dois repositórios um na pasta principal e outro na subpasta):
git rm --cached frontend 
remove um remote repository 
git remote rm (e o nome do remote (ex origin) )
git branch -D <nome do branch> Para apagar o branch localmente
git push <nome do origin> <nome do branch> --delete Para apagar o branch remotamente

# Enviando commits para o repositório remoto
git push origin master (Ou substitua o origin pelo nome configurado do seu remote, master significa o branch)
git push -u origin outro_branch (Envia o outro branch para remote e configura para "sincronizar" a branch local-remote)

# Trabahando com branches
git branch (Lista Branches)
git branch novo_branch (Cria branch)
git checkout branch_a_trabalhar (Troca para outro branch)
git checkout -b branch_novo (Troca e cria nova branch)
git branch -r (Mostra repositórios remotos)
git branch -t nome_da_branch origin/nome_da_branch (Sincroniza branch remota com branch local)

# Sincronizando informações do repositório remoto 
git pull

# Realizando merge de branches
git merge branch
git rebase master branch (Aplica os commits no seu branch)
git rebase --continue (Para continuar rebase após resolver conflitos)

# Remover arquivos de um commit
git reset HEAD arquivo.txt
git reset ID_do_commit (remove de stage as mudanças realizadas)
git revert ID_do_commit (remove alterações realizadas no commit selecionado)

# Colocando trabalho on hold
git stash (Salva no Stash o trabalho)
git stash list (Lista trabalhos no Stash)
git stash pop (Retorna o ultimo trabalho guardado)
git stash apply id_do_stash (Aplica stash em especifico)
git stash drop (Limpa o ultimo item adicionado ao stash)
git stash clear (Limpa o Stash)

# Configurações do git
~/.gitconfig
alias = !git option && git option (Adiciona alias com comandos do bash, necessário utilizar ! no inicio da linha)

# Cherry pick - Aplicar apenas um commit
git cherry-pick hash (Merge de apenas um commit na master ou outro branch)

# Git ignore
.gitignore (Listar arquivos e pastas a serem ignorados no git)
